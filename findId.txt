import React, { useEffect, useState } from 'react';
import './FindId.scss';

import { EmailCheck } from '../../global/EmailCheck';
import { API_BASE_URL } from '../../global/config/host-config';
import axios from 'axios';

import Swal from 'sweetalert2';
const FindId = () => {
  // 인증 번호 발송
  const [certificationNumber, setcertificationNumber] = useState(false);

  //  인증번호 일치하지 않을 때 메시지
  const [notificationMessage, setNotificationMessage] = useState(false);

  // 이메일 일치하고 사용자 정보 띄워줄때
  const [email, setEmail] = useState('');
  const [userId, setUserId] = useState('');

  // 이메일 입력값

  const handlerSendNumber = () => {
    if (!EmailCheck(email)) {
      alert('이메일을 정확하게 입력해주세요');
      return;
    } else {
      Swal.fire({
        position: 'top-center',
        icon: 'success',
        title: '인증번호가 발송되었습니다.',
        showConfirmButton: false,
        timer: 2000,
      });
    }
  };

  const handlecertificationNumber = (e) => {
    const enteredNumber = e.target.value;

    const correctCertificationNumber = '123456';
    console.log('인증번호 :', correctCertificationNumber);
    const isCorrect = enteredNumber === correctCertificationNumber;

    setcertificationNumber(isCorrect);
  };

  // 인증번호 일치하는지 확인
  const handleNumcheck = async () => {
    if (!certificationNumber) {
      setNotificationMessage('인증번호 일치하지않습니다.');
    } else {
      console.log('일치');
      await fetchSearchId();
    }
  };

  const fetchSearchId = async () => {
    const res = await axios.post(`${API_BASE_URL}/user/findid`, {
      email: email,
    });
    if (res.data.success) {
      setUserId(res.data.userId);
    } else {
      console.log('찾을수없음');
    }
  };

  useEffect(() => {
    console.log('요청');
  }, [certificationNumber]);
  return (
    <div className='wrapper'>
      <div className='find-template1'>
        <div className='loginDogether'>Dogether</div>
        <p className='maintext'> 아이디 찾기</p>
        <div className='findid'>
          <input
            id='email'
            name='email'
            type='email'
            placeholder='이메일을 입력하세요.'
          ></input>

          <button
            className='send-btn'
            onClick={handlerSendNumber}
          >
            인증번호 발송
          </button>

          <div className='notification'>{certificationNumber}</div>
        </div>

        <div>
          <input
            id='certification-number'
            name='certification-number'
            type='number'
            placeholder='인증번호를 입력해주세요.'
            onChange={handlecertificationNumber}
          ></input>
          <div>
            <p className='changetext'>
              <span>{notificationMessage}</span>
            </p>
          </div>
        </div>
        <button
          className='find-btn'
          onClick={handleNumcheck}
        >
          확인
        </button>
        {certificationNumber && (
          <div>
            <p>{email} 님의 아이디는 </p>
            <p>{userId} 입니다.</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default FindId;
